{
  "name": "@athenna/athenna",
  "version": "1.0.0",
  "license": "UNLICENSED",
  "engines": {
    "node": ">=16.0.0"
  },
  "scripts": {
    "start": "node artisan serve",
    "start:dev": "node artisan serve --watch",
    "build": "node artisan build",
    "test": "npm run --silent lint:fix && node artisan test",
    "test:debug": "npm run --silent lint:fix && cross-env NODE_DEBUG=athenna:* node --inspect artisan test",
    "test:coverage": "c8 npm run --silent test",
    "lint:fix": "eslint \"{bin,src,tests}/**/*.ts\" --fix"
  },
  "type": "module",
  "imports": {
    "#src/*": "./src/*.js",
    "#src": "./src/index.js",
    "#bin/*": "./bin/*.js",
    "#bin": "./bin/index.js",
    "#tests/*": "./tests/*.js",
    "#tests": "./tests/index.js"
  },
  "dependencies": {
    "@athenna/artisan": "^4.42.0",
    "@athenna/common": "^4.38.0",
    "@athenna/config": "^4.21.0",
    "@athenna/core": "^4.38.0",
    "@athenna/database": "^4.50.0",
    "@athenna/http": "^4.32.0",
    "@athenna/ioc": "^4.20.0",
    "@athenna/logger": "^4.21.0",
    "@athenna/view": "^4.22.0",
    "@fastify/cors": "^8.5.0",
    "@fastify/helmet": "^11.1.1",
    "@fastify/rate-limit": "^8.1.1",
    "@fastify/static": "^7.0.2",
    "@fastify/swagger": "^8.14.0",
    "@fastify/swagger-ui": "^3.0.0",
    "bcrypt": "^5.1.1",
    "knex": "^3.1.0",
    "pg": "^8.11.5",
    "reflect-metadata": "^0.2.2",
    "source-map-support": "^0.5.21"
  },
  "devDependencies": {
    "@athenna/test": "^4.23.0",
    "@athenna/tsconfig": "^4.12.0",
    "@types/bcrypt": "^5.0.2",
    "@typescript-eslint/eslint-plugin": "^6.7.4",
    "@typescript-eslint/parser": "^6.7.4",
    "eslint": "^8.36.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-n": "^15.6.1",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.1.1",
    "nodemon": "^3.0.1",
    "prettier": "^2.8.7"
  },
  "c8": {
    "all": true,
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [],
    "reporter": [
      "text-summary",
      "lcovonly",
      "html"
    ],
    "report-dir": "./tests/coverage",
    "check-coverage": true
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid",
    "endOfLine": "lf",
    "semi": false,
    "printWidth": 80,
    "overrides": [
      {
        "files": "tests/**/*",
        "options": {
          "printWidth": 120
        }
      }
    ]
  },
  "eslintIgnore": [],
  "eslintConfig": {
    "env": {
      "es2021": true,
      "node": true
    },
    "globals": {
      "ioc": true,
      "Env": true,
      "Config": true
    },
    "plugins": [
      "prettier",
      "@typescript-eslint"
    ],
    "extends": [
      "standard",
      "eslint:recommended",
      "plugin:prettier/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/eslint-recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "rules": {
      "camelcase": "off",
      "dot-notation": "off",
      "prettier/prettier": "error",
      "no-useless-constructor": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "caughtErrorsIgnorePattern": "^_"
        }
      ]
    }
  },
  "athenna": {
    "services": [
      "#src/services/user.service"
    ],
    "providers": [
      "@athenna/core/providers/CoreProvider",
      "@athenna/view/providers/ViewProvider",
      "@athenna/http/providers/HttpRouteProvider",
      "@athenna/http/providers/HttpServerProvider",
      "@athenna/database/providers/DatabaseProvider"
    ],
    "controllers": [
      "#src/controllers/user.controller"
    ],
    "commands": {
      "configure": "@athenna/artisan/commands/ConfigureCommand",
      "route:list": "@athenna/http/commands/RouteListCommand",
      "template:customize": "@athenna/artisan/commands/TemplateCustomizeCommand",
      "make:exception": "@athenna/core/commands/MakeExceptionCommand",
      "make:facade": "@athenna/core/commands/MakeFacadeCommand",
      "make:provider": "@athenna/core/commands/MakeProviderCommand",
      "make:service": "@athenna/core/commands/MakeServiceCommand",
      "make:test": "@athenna/core/commands/MakeTestCommand",
      "make:command": "@athenna/artisan/commands/MakeCommandCommand",
      "make:controller": "@athenna/http/commands/MakeControllerCommand",
      "make:middleware": "@athenna/http/commands/MakeMiddlewareCommand",
      "make:interceptor": "@athenna/http/commands/MakeInterceptorCommand",
      "make:terminator": "@athenna/http/commands/MakeTerminatorCommand",
      "make:view": "@athenna/view/commands/MakeViewCommand",
      "serve": {
        "path": "@athenna/core/commands/ServeCommand",
        "stayAlive": true
      },
      "build": {
        "path": "@athenna/core/commands/BuildCommand",
        "outDir": "build",
        "tsconfig": "node_modules/@athenna/tsconfig/tsconfig.app-build.json",
        "include": [
          "package.json",
          "package-lock.json"
        ]
      },
      "test": {
        "path": "@athenna/core/commands/TestCommand",
        "env": "test",
        "loadApp": true,
        "stayAlive": true
      },
      "repl": {
        "path": "@athenna/core/commands/ReplCommand",
        "stayAlive": true
      },
      "install": {
        "path": "@athenna/core/commands/InstallCommand",
        "registry": "npm"
      },
      "make:model": "@athenna/database/commands/MakeModelCommand",
      "make:seeder": "@athenna/database/commands/MakeSeederCommand",
      "make:migration": "@athenna/database/commands/MakeMigrationCommand",
      "db:fresh": {
        "path": "@athenna/database/commands/DbFreshCommand",
        "loadApp": true,
        "loadAllCommands": true
      },
      "db:seed": {
        "path": "@athenna/database/commands/DbSeedCommand",
        "loadApp": true
      },
      "db:wipe": {
        "path": "@athenna/database/commands/DbWipeCommand",
        "loadApp": true
      },
      "migration:run": {
        "path": "@athenna/database/commands/MigrationRunCommand",
        "loadApp": true
      },
      "migration:revert": {
        "path": "@athenna/database/commands/MigrationRevertCommand",
        "loadApp": true
      }
    },
    "templates": {
      "exception": "node_modules/@athenna/core/templates/exception.edge",
      "facade": "node_modules/@athenna/core/templates/facade.edge",
      "provider": "node_modules/@athenna/core/templates/provider.edge",
      "service": "node_modules/@athenna/core/templates/service.edge",
      "test": "node_modules/@athenna/core/templates/test.edge",
      "test-fn": "node_modules/@athenna/core/templates/test-fn.edge",
      "test-console": "node_modules/@athenna/core/templates/test-console.edge",
      "test-http": "node_modules/@athenna/core/templates/test-http.edge",
      "command": "node_modules/@athenna/artisan/templates/command.edge",
      "controller": "node_modules/@athenna/http/templates/controller.edge",
      "middleware": "node_modules/@athenna/http/templates/middleware.edge",
      "interceptor": "node_modules/@athenna/http/templates/interceptor.edge",
      "terminator": "node_modules/@athenna/http/templates/terminator.edge",
      "view": "node_modules/@athenna/view/templates/view.edge",
      "model": "node_modules/@athenna/database/templates/model.edge",
      "seeder": "node_modules/@athenna/database/templates/seeder.edge",
      "migration": "node_modules/@athenna/database/templates/migration.edge"
    },
    "directories": {
      "bootstrap": "bin",
      "config": "src/config",
      "routes": "src/routes",
      "models": "src/models",
      "exceptions": "src/exceptions",
      "providers": "src/providers",
      "facades": "src/providers/facades",
      "services": "src/services",
      "commands": "src/commands",
      "controllers": "src/controllers",
      "middlewares": "src/middlewares",
      "interceptors": "src/interceptors",
      "terminators": "src/terminators",
      "repositories": "src/repositories",
      "resources": "src/resources",
      "views": "src/resources/views",
      "locales": "src/resources/locales",
      "database": "src/database",
      "seeders": "src/database/seeders",
      "migrations": "src/database/migrations"
    },
    "models": [
      "#src/models/user"
    ]
  }
}
